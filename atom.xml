<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN"><title type="text">life worth</title><subtitle type="html">MemE 是一个强大且可高度定制的 GoHugo 博客主题，专为个人博客设计。</subtitle><updated>2021-02-08T09:21:33+00:00</updated><id>https://xs-cw.github.io/</id><link rel="alternate" type="text/html" href="https://xs-cw.github.io/"/><link rel="self" type="application/atom+xml" href="https://xs-cw.github.io/atom.xml"/><author><name>saltfish</name><uri>https://xs-cw.github.io/</uri><email>s4ltfish@gmail.com</email></author><rights>转载标明出处</rights><generator uri="https://gohugo.io/" version="0.80.0">Hugo</generator><entry><title type="text">Docker相关问题</title><link rel="alternate" type="text/html" href="https://xs-cw.github.io/posts/docker-problems/"/><id>https://xs-cw.github.io/posts/docker-problems/</id><updated>2021-02-08T09:21:31+00:00</updated><published>2020-05-05T22:05:31+08:00</published><author><name>saltfish</name><uri>https://www.saltfish.fun/</uri><email>s4ltfish@gmail.com</email></author><rights>转载标明出处</rights><summary type="html">docker for windows 启动kubernets问题 现象: docker desktop 启用kubernets后,一直处于star……</summary><content type="html">&lt;h3 id="docker-for-windows-启动kubernets问题">docker for windows 启动kubernets问题&lt;/h3>
&lt;ul>
&lt;li>现象:&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>docker desktop 启用kubernets后,一直处于&lt;code>starting&lt;/code>状态.&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>原因:&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>启用后,kubernets所需镜像没有下载.&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>解决:&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>建议卸载docker后,参照阿里云所提供的&lt;a href="https://github.com/AliyunContainerService/k8s-for-docker-desktop">流程&lt;/a>.
重新安装docker,安装kubernets所需镜像,然后才启用kubernets.&lt;/p>
&lt;/blockquote>
&lt;h3 id="在wsl中使用docker">在wsl中使用docker&lt;/h3>
&lt;ul>
&lt;li>在wsl中安装&lt;code>docker-cli&lt;/code>,&lt;code>docker-compose&lt;/code>&lt;/li>
&lt;li>将&lt;code>DOCKER_HOST=tcp://localhost:2375&lt;/code>写入wsl环境变量中&lt;/li>
&lt;li>在 windows的docker desktop中启用&lt;code>Expose daeon on tcp:localhost:2375 without TLS&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="docker容器访问宿主机ip">docker容器访问宿主机ip&lt;/h3>
&lt;ul>
&lt;li>新版docker中&lt;code>host.docker.internal&lt;/code>代表宿主机,可以直接使用&lt;/li>
&lt;/ul></content><category scheme="https://xs-cw.github.io/categories/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/" term="软件使用" label="软件使用"/><category scheme="https://xs-cw.github.io/categories/%E9%97%AE%E9%A2%98/" term="问题" label="问题"/><category scheme="https://xs-cw.github.io/tags/docker/" term="docker" label="docker"/><category scheme="https://xs-cw.github.io/tags/%E8%B8%A9%E5%9D%91/" term="踩坑" label="踩坑"/></entry><entry><title type="text">git相关</title><link rel="alternate" type="text/html" href="https://xs-cw.github.io/posts/git/"/><id>https://xs-cw.github.io/posts/git/</id><updated>2021-02-08T09:21:31+00:00</updated><published>2020-05-05T22:05:31+08:00</published><author><name>saltfish</name><uri>https://www.saltfish.fun/</uri><email>s4ltfish@gmail.com</email></author><rights>转载标明出处</rights><summary type="html">git添加多个远程 1 2 3 4 5 6 # 添加远端, 一次push到多个仓库 git remote set-url --add origin https://github.com/example/test.git # 查看远……</summary><content type="html">&lt;h3 id="git添加多个远程">git添加多个远程&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 添加远端, 一次push到多个仓库&lt;/span>
git remote set-url --add origin https://github.com/example/test.git
&lt;span class="c1"># 查看远端仓库&lt;/span>
git remote -v
&lt;span class="c1"># 添加远端仓库,pull/push时需要指定&lt;/span>
git remote set-url --add other https://other.test.com/zxbetter/test.git
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="git-贮藏">git 贮藏&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git stash save &lt;span class="s2">&amp;#34;stash info&amp;#34;&lt;/span>
git stash pop
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="https://xs-cw.github.io/categories/git/" term="git" label="git"/><category scheme="https://xs-cw.github.io/tags/git/" term="git" label="git"/></entry><entry><title type="text">nginx相关</title><link rel="alternate" type="text/html" href="https://xs-cw.github.io/posts/nginx/"/><id>https://xs-cw.github.io/posts/nginx/</id><updated>2021-02-08T09:21:31+00:00</updated><published>2020-05-05T22:05:31+08:00</published><author><name>saltfish</name><uri>https://www.saltfish.fun/</uri><email>s4ltfish@gmail.com</email></author><rights>转载标明出处</rights><summary type="html">使用docker nginx代理前端,避免跨域问题 使用dokcer-compose 启动……</summary><content type="html">&lt;h3 id="使用docker-nginx代理前端避免跨域问题">使用docker nginx代理前端,避免跨域问题&lt;/h3>
&lt;ul>
&lt;li>使用dokcer-compose 启动nginx&lt;br>
&lt;code>docker-compose.yml&lt;/code>配置:
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">nginx&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">container_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="m">80&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="m">443&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="m">443&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">./conf/nginx:/etc/nginx/conf.d&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">./log/nginx:/var/log/nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">./static:/var/www&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>nginx.conf&lt;/code>配置:&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>前端项目设置host header&lt;/strong>&lt;br>
&lt;strong>&lt;code>host.docker.internal&lt;/code>是docker宿主机ip&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-nginx" data-lang="nginx">&lt;span class="k">server&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kn">listen&lt;/span> &lt;span class="mi">80&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">server_name&lt;/span> &lt;span class="s">localhost&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1"># 代理前端项目
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kn">location&lt;/span> &lt;span class="s">/&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">Host&lt;/span> &lt;span class="nv">$host&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">#docker nginx必须这样设置
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kn">proxy_pass&lt;/span> &lt;span class="s">http://host.docker.internal:8080&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1"># 代理后端接口
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1"># 原先前端请求地址 http://localhost:9090/server/index
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1"># 修改成 http://localhost:9090/api/server/index
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kn">location&lt;/span> &lt;span class="s">/api&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1"># 接口地址修正
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kn">rewrite&lt;/span> &lt;span class="s">^/api/(.*)&lt;/span>$ &lt;span class="s">/&lt;/span>&lt;span class="nv">$1&lt;/span> &lt;span class="s">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1"># 后端接口地址
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kn">proxy_pass&lt;/span> &lt;span class="s">http://host.docker.internal:9090&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul></content><category scheme="https://xs-cw.github.io/categories/nginx%E7%BB%8F%E9%AA%8C/" term="nginx经验" label="nginx经验"/><category scheme="https://xs-cw.github.io/tags/nginx/" term="nginx" label="nginx"/><category scheme="https://xs-cw.github.io/tags/%E8%B8%A9%E5%9D%91/" term="踩坑" label="踩坑"/></entry><entry><title type="text">跨域问题</title><link rel="alternate" type="text/html" href="https://xs-cw.github.io/posts/cors/"/><id>https://xs-cw.github.io/posts/cors/</id><updated>2021-02-08T09:21:31+00:00</updated><published>2020-05-05T22:05:31+08:00</published><author><name>saltfish</name><uri>https://www.saltfish.fun/</uri><email>s4ltfish@gmail.com</email></author><rights>转载标明出处</rights><summary type="html">前端项目跨域问题 问题: 前端请求与页面地址不在同一域内. sechma://host:p……</summary><content type="html">&lt;h3 id="前端项目跨域问题">前端项目跨域问题&lt;/h3>
&lt;ul>
&lt;li>问题:
前端请求与页面地址不在同一域内.&lt;br>
&lt;code>sechma://host:port&lt;/code>如:&lt;code>http://localhost:8080&lt;/code>
三者有一个不相同都属于跨域.&lt;/li>
&lt;li>解决方案1: 后端新增拦截器或者中间件,允许跨域请求
如 &lt;code>gin&lt;/code>框架:
在路由上使用以下中间件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="nf">Cors&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="nx">gin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HandlerFunc&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">gin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Context&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">method&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Request&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Method&lt;/span>
&lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Header&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Access-Control-Allow-Origin&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;*&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Header&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Access-Control-Allow-Headers&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Content-Type,AccessToken,X-CSRF-Token, Authorization, Token&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Header&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Access-Control-Allow-Methods&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;POST, GET, OPTIONS&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Header&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Access-Control-Expose-Headers&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Header&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Access-Control-Allow-Credentials&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;true&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">//放行所有OPTIONS方法
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nx">method&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s">&amp;#34;OPTIONS&amp;#34;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">AbortWithStatus&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">StatusNoContent&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 处理请求
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Next&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>解决方案2: nginx代理前端&lt;br>
nginx配置如下:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-nginx" data-lang="nginx"> &lt;span class="k">server&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kn">listen&lt;/span> &lt;span class="mi">80&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">server_name&lt;/span> &lt;span class="s">localhost&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1"># 代理前端项目
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kn">location&lt;/span> &lt;span class="s">/&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kn">proxy_set_header&lt;/span> &lt;span class="s">Host&lt;/span> &lt;span class="nv">$host&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">#docker nginx必须这样设置
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kn">proxy_pass&lt;/span> &lt;span class="s">http://host.docker.internal:8080&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1"># 代理后端接口
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kn">location&lt;/span> &lt;span class="s">/api&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1"># 接口地址修正
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kn">rewrite&lt;/span> &lt;span class="s">^/api/(.*)&lt;/span>$ &lt;span class="s">/&lt;/span>&lt;span class="nv">$1&lt;/span> &lt;span class="s">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1"># 后端接口地址
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kn">proxy_pass&lt;/span> &lt;span class="s">http://host.docker.internal:9090&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="https://xs-cw.github.io/categories/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/><category scheme="https://xs-cw.github.io/tags/%E5%89%8D%E7%AB%AF/" term="前端" label="前端"/><category scheme="https://xs-cw.github.io/tags/%E5%90%8E%E7%AB%AF/" term="后端" label="后端"/></entry><entry><title type="text">Questions</title><link rel="alternate" type="text/html" href="https://xs-cw.github.io/posts/questions/"/><id>https://xs-cw.github.io/posts/questions/</id><updated>2021-02-08T09:21:31+00:00</updated><published>2020-04-07T10:42:49+08:00</published><author><name>saltfish</name><uri>https://www.saltfish.fun/</uri><email>s4ltfish@gmail.com</email></author><rights>转载标明出处</rights><summary type="html">乐观锁悲观锁 https://juejin.im/post/5b4977ae5188251b146b2fc8 docker相关 docker实现原理:linux namespace技术……</summary><content type="html">&lt;ol>
&lt;li>
&lt;h3 id="乐观锁悲观锁">乐观锁悲观锁&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://juejin.im/post/5b4977ae5188251b146b2fc8">https://juejin.im/post/5b4977ae5188251b146b2fc8&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h3 id="docker相关">docker相关&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>docker实现原理:linux namespace技术&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://blog.csdn.net/lixiao0320/article/details/94348042">https://blog.csdn.net/lixiao0320/article/details/94348042&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h3 id="redis数据结构">redis数据结构&lt;/h3>
&lt;ul>
&lt;li>数据结构有:
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>类型常量&lt;/th>
&lt;th>对象的名称&lt;/th>
&lt;th>编码格式&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>REDIS_STRING&lt;/td>
&lt;td>字符串&lt;/td>
&lt;td>int、raw或者embstr&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>REDIS_LIST&lt;/td>
&lt;td>列表&lt;/td>
&lt;td>ziplist或者linkedlist&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>REDIS_HASH&lt;/td>
&lt;td>哈希&lt;/td>
&lt;td>ziplist或者hashtable(hashtable是由dict结构实现)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>REDIS_SET&lt;/td>
&lt;td>集合&lt;/td>
&lt;td>intset或者hashtable&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>REDIS_ZSET&lt;/td>
&lt;td>有序集合&lt;/td>
&lt;td>ziplist，或者是skiplist与dict结合体&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/li>
&lt;li>底层实现
&lt;a href="https://blog.csdn.net/wcf373722432/article/details/78678504">https://blog.csdn.net/wcf373722432/article/details/78678504&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h3 id="redis为什么比mysql快">redis为什么比mysql快&lt;/h3>
&lt;ul>
&lt;li>redis存储在内存中,mysql磁盘&lt;/li>
&lt;li>redis使用K-V存储,mysql使用B+tree&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h3 id="消息队列">消息队列&lt;/h3>
&lt;/li>
&lt;li>
&lt;h3 id="微服务">微服务&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>服务发现&lt;/p>
&lt;p>go-micro,consul工具; zookeeper,k8s&lt;/p>
&lt;/li>
&lt;li>
&lt;p>负载均衡&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://blog.csdn.net/yang731227/article/details/90637535">https://blog.csdn.net/yang731227/article/details/90637535&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h3 id="微服务有什么优点">微服务有什么优点？&lt;/h3>
&lt;ul>
&lt;li>解耦——系统中的服务在很大程度上是解耦的。因此，整个应用程序可以很容易地构建、修改和伸缩&lt;/li>
&lt;li>组件化——微服务被视为独立的组件，可以很容易地替换和升级&lt;/li>
&lt;li>业务功能——微服务非常简单，只关注一个功能&lt;/li>
&lt;li>自治——开发人员和团队可以彼此独立工作，从而提高速度&lt;/li>
&lt;li>持续交付——通过软件创建、测试和批准的系统自动化，允许频繁地发布软件&lt;/li>
&lt;li>责任——微服务不关注应用程序作为项目。相反，他们将应用程序视为自己负责的产品&lt;/li>
&lt;li>分散治理——重点是为正确的工作使用正确的工具。这意味着没有标准化的模式或任何技术模式。开发人员可以自由选择最有用的工具来解决他们的问题&lt;/li>
&lt;li>敏捷——微服务支持敏捷开发。任何新特性都可以快速开发并再次丢弃&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h3 id="redis缓存数据一致性">redis缓存数据一致性&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://blog.csdn.net/koli6678/article/details/88202245">https://blog.csdn.net/koli6678/article/details/88202245&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h3 id="redis-缓存穿透">redis 缓存穿透&lt;/h3>
&lt;ul>
&lt;li>不存在的结果也进行缓存,或者采用布隆过滤拦截不存在结果的请求&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h3 id="缓存雪崩">缓存雪崩&lt;/h3>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>加锁或者使用队列约束请求&lt;/li>
&lt;li>过期时间设置一个随机偏量,避免同时失效&lt;/li>
&lt;/ul>
&lt;ol start="11">
&lt;li>
&lt;h3 id="缓存击穿">缓存击穿&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>方案&lt;/th>
&lt;th>优点&lt;/th>
&lt;th style="text-align:left">缺点&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>简单分布式互斥锁（mutex key)&lt;/td>
&lt;td>1. 思路简单 2. 保证一致性&lt;/td>
&lt;td style="text-align:left">1.代码复杂度增大 2.存在死锁的风险 3. 存在线程池阻塞的风险&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>“提前”使用互斥锁&lt;/td>
&lt;td>1. 保证一致性&lt;/td>
&lt;td style="text-align:left">同上&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;quot;永不过期&amp;quot;&lt;/td>
&lt;td>1. 异步构建缓存，不会阻塞线程池&lt;/td>
&lt;td style="text-align:left">1. 不保证一致性。2. 代码复杂度增大(每个value都要维护一个timekey)。 3. 占用一定的内存空间(每个value都要维护一个timekey)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>netflix资源隔离组件hystrix&lt;/td>
&lt;td>1. hystrix技术成熟，有效保证后端。2. hystrix监控强大。&lt;/td>
&lt;td style="text-align:left">1. 部分访问存在降级策略。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/li>
&lt;li>
&lt;h3 id="channel-底层实现线程安全">channel 底层实现线程安全&lt;/h3>
&lt;ul>
&lt;li>加锁&lt;/li>
&lt;li>关闭通道时会广播到所有&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h3 id="sync-map-区别">sync map 区别&lt;/h3>
&lt;ul>
&lt;li>加锁&lt;/li>
&lt;li>适合大量读,小量写&lt;/li>
&lt;li>tips:第三方优化的 &lt;a href="https://github.com/orcaman/concurrent-map">concurrent-map&lt;/a>(想一想，mysql加锁，是不是有表级锁、行级锁，前文的sync.RWMutex加锁方式相当于表级锁。
而sync.Map其实也是相当于表级锁，只不过多读写分了两个map，本质还是一样的。
既然这样，那就自然知道优化方向了：就是把锁的粒度尽可能降低来提高运行速度。
思路：对一个大map进行hash，其内部是n个小map，根据key来来hash确定在具体的那个小map中，这样加锁的粒度就变成1/n了。
网上找了下，真有大佬实现了)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h3 id="context-超时">context 超时&lt;/h3>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h3 id="登录过程修改角色">登录过程修改角色&lt;/h3>
&lt;ul>
&lt;li>session消息&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h3 id="token与jwt比较">token与jwt比较&lt;/h3>
&lt;/li>
&lt;li>
&lt;h3 id="登录持久化">登录持久化&lt;/h3>
&lt;ul>
&lt;li>登录信息加密写入cookie&lt;/li>
&lt;li>oatht2 验证&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h3 id="go的前期版本bug">go的前期版本bug&lt;/h3>
&lt;/li>
&lt;li>
&lt;h3 id="go-相关问题">go 相关问题&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://talkgo.org/interview/interview-golang-language/">go面试题&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://studygolang.com/articles/11535">nil的相关理解&lt;/a> &lt;a href="https://play.yeyuqiu.com/p/3UV3wfPWoim">PLAY&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">
&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;unsafe&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// nil的零值
&lt;/span>&lt;span class="c1">// nil没有默认的类型，尽管它是多个类型的零值，必须显式或隐式指定每个nil用法的明确类型
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 明确.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="kd">struct&lt;/span>&lt;span class="p">{})(&lt;/span>&lt;span class="kc">nil&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">_&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">nil&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">_&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="nb">bool&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">nil&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">_&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kd">chan&lt;/span> &lt;span class="nb">string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">nil&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">_&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kd">func&lt;/span>&lt;span class="p">())(&lt;/span>&lt;span class="kc">nil&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">_&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kd">interface&lt;/span>&lt;span class="p">{}(&lt;/span>&lt;span class="kc">nil&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// 隐式.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="kd">struct&lt;/span>&lt;span class="p">{}&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">bool&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="kd">chan&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="kd">interface&lt;/span>&lt;span class="p">{}&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="c1">// nil的类型
&lt;/span>&lt;span class="c1">// nil类型的所有值的内存布局始终相同,换一句话说就是：不同类型nil的内存地址是一样的。
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">m&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">string&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">ptr&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="kt">int&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">sl&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">int&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%p\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">m&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">//0x0
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%p\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ptr&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="c1">//0x0
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%p\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">sl&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="c1">//0x0
&lt;/span>&lt;span class="c1">// nil值的大小始终与其类型与nil值相同的non-nil值大小相同。因此, 表示不同零值的nil标识符可能具有不同的大小。
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 以下打印结果为64位体系
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">p&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="kd">struct&lt;/span>&lt;span class="p">{}&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sizeof&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">p&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="c1">// 8
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">s&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sizeof&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">s&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="c1">// 24
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">m&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">bool&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sizeof&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">m&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="c1">// 8
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">c&lt;/span> &lt;span class="kd">chan&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sizeof&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">c&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="c1">// 8
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">f&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sizeof&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">f&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="c1">// 8
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="kd">interface&lt;/span>&lt;span class="p">{}&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sizeof&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="c1">// 16
&lt;/span>&lt;span class="c1">// nil 值比较
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 1.不同类型的nil是不能比较的
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">m&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">string&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">ptr&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="kt">int&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">m&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nx">ptr&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">//invalid operation: m == ptr (mismatched types map[int]string and *int)
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 2.有两个情形例外: 两个值之一的类型是另一个的基础类型。
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">//两个值之一的类型实现了另一个值的类型 (必须是接口类型)。
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kd">type&lt;/span> &lt;span class="nx">IntPtr&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="kt">int&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">IntPtr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">nil&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="kc">nil&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1">//true
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{})(&lt;/span>&lt;span class="kc">nil&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="kc">nil&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1">//false
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h3 id="go框架-路由">go框架 路由&lt;/h3>
&lt;/li>
&lt;li>
&lt;h3 id="订单高并发--超卖">订单高并发 超卖&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>超卖问题&lt;/p>
&lt;p>&lt;a href="https://juejin.im/post/5dbeb66f51882524a33b9135">https://juejin.im/post/5dbeb66f51882524a33b9135&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>超时实现&lt;/p>
&lt;p>轮询数据库,时间轮,redis ,消息队列&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h3 id="ws连接数过高">ws连接数过高&lt;/h3>
&lt;/li>
&lt;li>
&lt;h3 id="k8s">k8s&lt;/h3>
&lt;/li>
&lt;li>
&lt;h3 id="最近项目">最近项目&lt;/h3>
&lt;/li>
&lt;li>
&lt;h3 id="常见排序时间复杂度">常见排序时间复杂度&lt;/h3>
&lt;/li>
&lt;li>
&lt;h3 id="mysql">mysql&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>事务隔离&lt;/p>
&lt;/li>
&lt;li>
&lt;p>慢查询&lt;/p>
&lt;/li>
&lt;li>
&lt;p>索引优化 索引的数据结构&lt;/p>
&lt;p>&lt;a href="https://cloud.tencent.com/developer/news/362898">https://cloud.tencent.com/developer/news/362898&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>filesort&lt;/p>
&lt;p>不能使用索引排序时,会使用文件排序,比较慢的外部查询,尽量避免&lt;/p>
&lt;/li>
&lt;li>
&lt;p>B+tree&lt;/p>
&lt;p>&lt;a href="https://www.cnblogs.com/tiancai/p/9024351.html">为什么mysql使用B+树&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h3 id="mongodb">Mongodb&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>mongodb索引&lt;/p>
&lt;p>通常采用类似btree的结构持久化存储，以保证从索引里快速&lt;code>O(logN)的时间复杂度&lt;/code>&lt;/p>
&lt;p>MongoDB支持多种类型的索引，包括单字段索引、复合索引、多key索引、文本索引等，每种类型的索引有不同的使用场合&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h3 id="求数组中两数字之和为指定数字">求数组中两数字之和为指定数字&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>双循环遍历&lt;/p>
&lt;/li>
&lt;li>
&lt;p>字典法: 将差值作为key,下标作为value,遍历数组查询&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go"> &lt;span class="k">for&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">v&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">nums&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">index&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">m&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">];&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">index&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">i&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">m&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">i&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h3 id="踩过的坑">踩过的坑&lt;/h3>
&lt;ul>
&lt;li>for range 数组长度固定,range到的值会有一次复制过程&lt;/li>
&lt;li>sync.Pool 被gc会被直接回收掉，所以不适合存放有状态的内容，只适合状态无关的临时数据,gin框架中存储context对象&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h3 id="linux">Linux&lt;/h3>
&lt;ul>
&lt;li>select、poll、epoll 的区别&lt;a href="https://segmentfault.com/a/1190000003063859">详见Linux IO模式&lt;/a>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>select&lt;/strong> 有数量限制,可以通过宏修改,但是性能会更低&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>poll&lt;/strong> 没有数量限制,监控文件数过多也会性能变低&lt;/p>
&lt;blockquote>
&lt;p>select和poll都需要在返回后，&lt;code>通过遍历文件描述符来获取已经就绪的socket&lt;/code>。事实上，同时连 接的大量客户端在一时刻可能只有很少的处于就绪状态，因此随着监视的描述符数量的增长，其效率也会线性下降&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>epoll&lt;/strong> 增强版的select和poll,更灵活,使用一个文件描述符管理多个描述符，将用户关系的文件描述符的事件存放到内核的一个事件表中，这样在用户空间和内核空间的copy只需一次。&lt;/p>
&lt;p>操作过程需要如下三个接口:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="kt">int&lt;/span> &lt;span class="nf">epoll_create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">size&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">；&lt;/span>&lt;span class="c1">//创建一个epoll的句柄，size用来告诉内核这个监听的数目一共有多大,只是一个建议值
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">epoll_ctl&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">epfd&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">op&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">fd&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">epoll_event&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">；&lt;/span>
&lt;span class="kt">int&lt;/span> &lt;span class="n">epoll_wait&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">epfd&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">epoll_event&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">events&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">maxevents&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">timeout&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>epoll工作模式: &lt;strong>LT(level trigger)&lt;/strong> ,&lt;strong>ET(edge trigger)&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>LT模式&lt;/strong>(默认)：当epoll_wait检测到描述符事件发生并将此事件通知应用程序，&lt;code>应用程序可以不立即处理该事件&lt;/code>。下次调用epoll_wait时，会再次响应应用程序并通知此事件。&lt;code>同时支持block和no-block socket&lt;/code>&lt;/li>
&lt;li>&lt;strong>ET模式&lt;/strong>(高性能)：当epoll_wait检测到描述符事件发生并将此事件通知应用程序，&lt;code>应用程序必须立即处理该事件&lt;/code>。如果不处理，下次调用epoll_wait时，不会再次响应应用程序并通知此事件。&lt;code>只支持no-block socket&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;h3 id="其他问题">其他问题&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>mysql 隔离级别&lt;/p>
&lt;p>&lt;a href="https://www.cnblogs.com/jian-gao/p/10795407.html">https://www.cnblogs.com/jian-gao/p/10795407.html&lt;/a>&lt;/p>
&lt;p>&lt;strong>Mysql的四种隔离级别&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Read Uncommitted（读取未提交内容）&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Read Committed（读取提交内容）&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Repeatable Read（可重读）&lt;/strong>(数据库默认级别)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Serializable（可串行化）&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>隔离级别&lt;/th>
&lt;th>脏读&lt;/th>
&lt;th>不可重复读&lt;/th>
&lt;th>幻读&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Read uncommitted&lt;/td>
&lt;td>√&lt;/td>
&lt;td>√&lt;/td>
&lt;td>√&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Read committed&lt;/td>
&lt;td>×&lt;/td>
&lt;td>√&lt;/td>
&lt;td>√&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Repeatable read&lt;/td>
&lt;td>×&lt;/td>
&lt;td>×&lt;/td>
&lt;td>√&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Serializable&lt;/td>
&lt;td>×&lt;/td>
&lt;td>×&lt;/td>
&lt;td>×&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>mvcc 聚集索引和非聚集索引的结构&lt;/p>
&lt;/li>
&lt;li>
&lt;p>redis 底层模型 多路复用&lt;/p>
&lt;/li>
&lt;li>
&lt;p>tcp/ip&lt;/p>
&lt;/li>
&lt;li>
&lt;p>http2和http1的区别&lt;/p>
&lt;/li>
&lt;li>
&lt;p>分布式事务 分布式锁&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一致性哈希&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ConcurrentHashMap的看法&lt;/p>
&lt;/li>
&lt;li>
&lt;p>docker 网络模式 隔离级别&lt;/p>
&lt;ul>
&lt;li>Bridge contauner 桥接式&lt;/li>
&lt;li>Host(open) container 开放式&lt;/li>
&lt;li>Container(join) container 联合挂载式，是host模式的延伸&lt;/li>
&lt;li>None(Close) container 封闭式网络模式&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>正在被执行的 goroutine 发生以下情况时让出当前 goroutine 的执行权，并调度后面的 goroutine 执行：&lt;/p>
&lt;ul>
&lt;li>IO 操作&lt;/li>
&lt;li>Channel 阻塞&lt;/li>
&lt;li>system call&lt;/li>
&lt;li>运行较长时间&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>byte转string, 零内存拷贝方法&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;reflect&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;unsafe&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kd">type&lt;/span> &lt;span class="nx">Student&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">Name&lt;/span> &lt;span class="nx">People&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">type&lt;/span> &lt;span class="nx">People&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">X&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;span class="nx">S&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">int&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">a&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="s">&amp;#34;aaa&amp;#34;&lt;/span>
&lt;span class="nx">b&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Pointer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// &amp;amp;[97 97 97]
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;ccc&amp;#34;&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// &amp;amp;[99 99 99]
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">b&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">98&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">98&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">98&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// bbb
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">s&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">Student&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">Name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">People&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">X&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;people&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">S&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="p">}}&lt;/span>
&lt;span class="nx">p&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">People&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Pointer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// &amp;amp;{people [1 2]}
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Name&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">X&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;student&amp;#34;&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">p&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// &amp;amp;{student [1 2]}
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol></content><category scheme="https://xs-cw.github.io/categories/question/" term="question" label="question"/><category scheme="https://xs-cw.github.io/tags/question/" term="question" label="question"/></entry><entry><title type="text">Leetcode63</title><link rel="alternate" type="text/html" href="https://xs-cw.github.io/posts/leetcode63/"/><id>https://xs-cw.github.io/posts/leetcode63/</id><updated>2021-02-08T09:21:31+00:00</updated><published>2020-04-04T12:01:40+08:00</published><author><name>saltfish</name><uri>https://www.saltfish.fun/</uri><email>s4ltfish@gmail.com</email></author><rights>转载标明出处</rights><summary type="html">面试题63. 股票的最大利润 难度中等11收藏分享切换为英文关注反馈 假设把某股票的价格按……</summary><content type="html">&lt;h3 id="面试题63-股票的最大利润">面试题63. 股票的最大利润&lt;/h3>
&lt;p>难度中等11收藏分享切换为英文关注反馈&lt;/p>
&lt;p>假设把某股票的价格按照时间先后顺序存储在数组中，请问买卖该股票一次可能获得的最大利润是多少？&lt;/p>
&lt;p>&lt;strong>示例 1:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>输入: [7,1,5,3,6,4]
输出: 5
解释: 在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。
注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格。
&lt;/code>&lt;/pre>&lt;p>&lt;strong>示例 2:&lt;/strong>&lt;/p>
&lt;pre>&lt;code>输入: [7,6,4,3,1]
输出: 0
解释: 在这种情况下, 没有交易完成, 所以最大利润为 0。
&lt;/code>&lt;/pre>&lt;p>&lt;strong>限制：&lt;/strong>&lt;/p>
&lt;pre>&lt;code>0 &amp;lt;= 数组长度 &amp;lt;= 10^5
&lt;/code>&lt;/pre>&lt;h4 id="思路">思路:&lt;/h4>
&lt;blockquote>
&lt;p>遍历数组,取每天最高利润,遍历完成即是最优解&lt;/p>
&lt;/blockquote>
&lt;h4 id="代码">代码:&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="nf">leet63maxProfit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">prices&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">prices&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 第一天盈利为0
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">win&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="c1">// 第一天亏损为当天价格
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">lose&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nx">prices&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">prices&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 当天盈利与目前最高盈利相比
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">win&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nf">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">win&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">lose&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">prices&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="c1">// 取最少的亏损
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">lose&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nf">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">lose&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nx">prices&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">win&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">b&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="p">&amp;gt;&lt;/span> &lt;span class="nx">b&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">a&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">b&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content></entry><entry><title type="text">Leetcode1162</title><link rel="alternate" type="text/html" href="https://xs-cw.github.io/posts/leetcode1162/"/><id>https://xs-cw.github.io/posts/leetcode1162/</id><updated>2021-02-08T09:21:31+00:00</updated><published>2020-04-04T00:43:32+08:00</published><author><name>saltfish</name><uri>https://www.saltfish.fun/</uri><email>s4ltfish@gmail.com</email></author><rights>转载标明出处</rights><summary type="html">1162. 地图分析 你现在手里有一份大小为 N x N 的「地图」（网格） grid，上面的每个「区域」……</summary><content type="html">&lt;h3 id="1162-地图分析">1162. 地图分析&lt;/h3>
&lt;p>你现在手里有一份大小为 N x N 的「地图」（网格） grid，上面的每个「区域」（单元格）都用 0 和 1 标记好了。其中 0 代表海洋，1 代表陆地，请你找出一个海洋区域，这个海洋区域到离它最近的陆地区域的距离是最大的。&lt;/p>
&lt;p>我们这里说的距离是「曼哈顿距离」（ Manhattan Distance）：(x0, y0) 和 (x1, y1) 这两个区域之间的距离是 |x0 - x1| + |y0 - y1| 。&lt;/p>
&lt;p>如果我们的地图上只有陆地或者海洋，请返回 -1。&lt;/p>
&lt;p>示例1:&lt;/p>
&lt;p>&lt;img src="https://xs-cw.github.io/img/1336_ex1.jpeg" alt="img">&lt;/p>
&lt;pre>&lt;code>输入：[[1,0,1],[0,0,0],[1,0,1]]
输出：2
解释：
海洋区域 (1, 1) 和所有陆地区域之间的距离都达到最大，最大距离为 2。
&lt;/code>&lt;/pre>&lt;p>&lt;strong>示例 2：&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://xs-cw.github.io/img/1336_ex1.jpeg" alt="img">&lt;/p>
&lt;pre>&lt;code>输入：[[1,0,0],[0,0,0],[0,0,0]]
输出：4
解释：
海洋区域 (2, 2) 和所有陆地区域之间的距离都达到最大，最大距离为 4。
&lt;/code>&lt;/pre>&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;code>1 &amp;lt;= grid.length == grid[0].length &amp;lt;= 100&lt;/code>&lt;/li>
&lt;li>&lt;code>grid[i][j]&lt;/code> 不是 &lt;code>0&lt;/code> 就是 &lt;code>1&lt;/code>&lt;/li>
&lt;/ol>
&lt;h3 id="思路">思路&lt;/h3>
&lt;p>筛选到所有陆地,逐个向外(四个方向)遍历一次,并将遍历到的海洋标记为已经遍历,记录下遍历距离,最后遍历到的海洋即是最远位置的,返回此时距离.&lt;/p>
&lt;h3 id="代码">代码&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="nf">maxDistance&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">grid&lt;/span> &lt;span class="p">[][]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">land&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">([][]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">length&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">grid&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// 拓展方向
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">dx&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">dy&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 记录陆地坐标
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">grid&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="nx">i2&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">grid&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">grid&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="nx">i2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">land&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">land&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">i2&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 没有陆地或者没有海洋返回-1
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">land&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">land&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nx">length&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">length&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">i&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">land&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">y&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">land&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nx">land&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="nx">j&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">j&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">j&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">newX&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">newY&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">x&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">dx&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nx">y&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">dy&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">j&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">newX&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nx">newY&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nx">newX&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="nx">length&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nx">newY&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="nx">length&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nx">grid&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">newX&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="nx">newY&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">continue&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">grid&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">newX&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="nx">newY&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">grid&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="nx">y&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="nx">land&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">land&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">newX&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">newY&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">i&lt;/span>&lt;span class="o">--&lt;/span>
&lt;span class="nx">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">y&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">land&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nx">land&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">grid&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="nx">y&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="https://xs-cw.github.io/categories/leetcode/" term="leetcode" label="leetcode"/><category scheme="https://xs-cw.github.io/tags/leetcode/" term="leetcode" label="leetcode"/></entry><entry><title type="text">WSL踩坑</title><link rel="alternate" type="text/html" href="https://xs-cw.github.io/posts/wsl-problems/"/><id>https://xs-cw.github.io/posts/wsl-problems/</id><updated>2021-02-08T09:21:31+00:00</updated><published>2020-03-11T19:29:24+08:00</published><author><name>saltfish</name><uri>https://www.saltfish.fun/</uri><email>s4ltfish@gmail.com</email></author><rights>转载标明出处</rights><summary type="html">wsl ubuntu 更新中断 更新中断后部分软件安装会报错,可以先将/var/lib/dpkg/inf……</summary><content type="html">&lt;h3 id="wsl-ubuntu-更新中断">wsl ubuntu 更新中断&lt;/h3>
&lt;p>更新中断后部分软件安装会报错,可以先将&lt;code>/var/lib/dpkg/info&lt;/code>目录下对应的文件备份
然后再重新更新.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo mv /var/lib/dpkg/info/&lt;span class="o">{&lt;/span>pkg&lt;span class="o">}&lt;/span>.postinst /var/lib/dpkg/info/&lt;span class="o">{&lt;/span>pkg&lt;span class="o">}&lt;/span>.postinst.bak
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="https://xs-cw.github.io/categories/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/" term="软件使用" label="软件使用"/><category scheme="https://xs-cw.github.io/categories/%E9%97%AE%E9%A2%98/" term="问题" label="问题"/><category scheme="https://xs-cw.github.io/tags/wsl/" term="wsl" label="wsl"/><category scheme="https://xs-cw.github.io/tags/%E8%B8%A9%E5%9D%91/" term="踩坑" label="踩坑"/></entry><entry><title type="text">WSL下oh-my-zsh安装</title><link rel="alternate" type="text/html" href="https://xs-cw.github.io/posts/wsl-zsh/"/><id>https://xs-cw.github.io/posts/wsl-zsh/</id><updated>2021-02-08T09:21:31+00:00</updated><published>2020-03-11T16:44:40+08:00</published><author><name>saltfish</name><uri>https://www.saltfish.fun/</uri><email>s4ltfish@gmail.com</email></author><rights>转载标明出处</rights><summary type="html">安装ZSH 以Ubuntu为例,安装步骤 1 2 3 4 5 # 安装zsh sudo apt-get install zsh # 安装oh-my……</summary><content type="html">&lt;h3 id="安装zsh">安装ZSH&lt;/h3>
&lt;ul>
&lt;li>以Ubuntu为例,安装步骤&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 安装zsh&lt;/span>
sudo apt-get install zsh
&lt;span class="c1"># 安装oh-my-zsh&lt;/span>
sh -c &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>
&lt;p>oh-myzsh 其他自定义配置请&lt;a href="https://www.jianshu.com/p/ba782b57ae96">参考&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>windows文件夹显示问题
Ubuntu下没有&lt;code>/etc/DIR_COLORS&lt;/code>,所以需要以下操作&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">dircolors -p &amp;gt; ~/.dircolors
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>修改刚生成的文件,推荐vim,可以直接预览颜色&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">vim ~/.dircolors
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>找到如下一行,修改对应颜色&lt;/p>
&lt;pre>&lt;code>OTHER_WRITABLE 34;42 # dir that is other-writable (o+w) and not sticky
&lt;/code>&lt;/pre>&lt;p>例如改为黑色字体红色背景,颜色与背景&lt;a href="https://xs-cw.github.io/posts/wsl-zsh/#style">参考样式&lt;/a>&lt;/p>
&lt;pre>&lt;code>OTHER_WRITABLE 30;41 # dir that is other-writable (o+w) and not sticky
&lt;/code>&lt;/pre>&lt;p>让修改后的文件生效,将下面的代码添加到&lt;code>~/.zshrc&lt;/code>&lt;/p>
&lt;pre>&lt;code>eval &amp;quot;$(dircolors ~/.dircolors)&amp;quot;;
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;p>&lt;a name="style">常见样式参考&lt;/a>&lt;/p>
&lt;pre>&lt;code>文字效果
00 默认
01 加粗
04 下划线
05 闪烁
07 反显
08 隐藏
文字颜色
30 - 黑色
31 - 红色
32 - 绿色
33 - 黄色
34 - 蓝色
35 - 洋红色
36 - 蓝绿色
37 - 白色
背景颜色
40 - 黑色
41 - 红色
42 - 绿色
43 - 黄色
44 - 蓝色
45 - 洋红色
46 - 蓝绿色
47 - 白色
&lt;/code>&lt;/pre></content><category scheme="https://xs-cw.github.io/categories/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/" term="软件使用" label="软件使用"/><category scheme="https://xs-cw.github.io/categories/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/" term="开发环境" label="开发环境"/><category scheme="https://xs-cw.github.io/tags/wsl/" term="wsl" label="wsl"/><category scheme="https://xs-cw.github.io/tags/oh-my-zsh/" term="oh-my-zsh" label="oh-my-zsh"/></entry><entry><title type="text">WSL与vscode安装</title><link rel="alternate" type="text/html" href="https://xs-cw.github.io/posts/wsl-install/"/><id>https://xs-cw.github.io/posts/wsl-install/</id><updated>2021-02-08T09:21:31+00:00</updated><published>2020-03-11T15:34:29+08:00</published><author><name>saltfish</name><uri>https://www.saltfish.fun/</uri><email>s4ltfish@gmail.com</email></author><rights>转载标明出处</rights><summary type="html">安装WSL 启用WSL 以管理员身份运行 Pow­er­Shell (WIN+X)，输入下面……</summary><content type="html">&lt;h3 id="安装wsl">安装WSL&lt;/h3>
&lt;ul>
&lt;li>
&lt;h4 id="启用wsl">启用WSL&lt;/h4>
&lt;p>以管理员身份运行 Pow­er­Shell (WIN+X)，输入下面的命令开启 “适用于 Linux 的 Win­dows 子系统” 功能，并重启。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="nb">Enable-WindowsOptionalFeature&lt;/span> &lt;span class="n">-Online&lt;/span> &lt;span class="n">-FeatureName&lt;/span> &lt;span class="n">Microsoft-Windows-Subsystem-Linux&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;h4 id="使用-lxrunoffline-安装-wsl">使用 LxRunOffline 安装 WSL&lt;/h4>
&lt;p>下载解压 &lt;a href="https://p3terx.com/archives/manage-wsl-with-lxrunoffline.html">LxRunOffline&lt;/a> ，并设置环境变量以便使用&lt;code>lxrunoffline&lt;/code>命令。&lt;/p>
&lt;p>下载 &lt;a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-manual">WSL 官方离线包&lt;/a>，解压后可得到名为 &lt;code>install.tar.gz&lt;/code> 的文件。&lt;/p>
&lt;p>输入以下命令进行安装：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">lxrunoffline i -n &amp;lt;WSL名称&amp;gt; -d &amp;lt;安装路径&amp;gt; -f &amp;lt;安装包路径&amp;gt;install.tar.gz
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>加入&lt;code>-s&lt;/code>参数可在桌面创建快捷方式。
其他lxrunoffline 命令细节,请&lt;a href="https://p3terx.com/archives/manage-wsl-with-lxrunoffline.html">参考&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;h4 id="修改wsl目录映射关系">修改WSL目录映射关系&lt;/h4>
&lt;p>wsl docker安装,需要修改目录映射
Windows 10 18.03+ 操作方式 &lt;code>sudo nano /etc/wsl.conf&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="k">[automount]&lt;/span>
&lt;span class="na">root&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">/&lt;/span>
&lt;span class="na">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;metadata&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其他低版本采用目录映射&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">sudo mkdir /c
sudo mount --bind /mnt/c /c
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>安装完成后退出wsl(ctrl+d), 然后&lt;code>WIN+L&lt;/code>再重新进入,就可以发现&lt;code>c&lt;/code>盘在根目录了&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;h3 id="安装vscode">安装vscode&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>指定插件下载路径&lt;/p>
&lt;p>下载安装vscode,默认插件安装路径在&lt;code>C:\Users\{USER}\.vscode\extensions&lt;/code>&lt;/p>
&lt;p>可以选择创建软链接的方式安装在其他目录,以减少C盘占用,使用管理员权限打开&lt;code>CMD&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 删除已存在的extensions目录&lt;/span>
rmdir /s/q extensions
&lt;span class="c1"># 创建软链接&lt;/span>
mklink /D &lt;span class="s2">&amp;#34;C:\Users\{USER}\.vscode\extensions&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;{指定目录}&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>安装remote-wsl&lt;/p>
&lt;p>打开wsl终端窗口，切换到&lt;code>~&lt;/code>目录，在终端中输入&lt;code>code-insiders&lt;/code>,执行完毕后
除了主题等插件外,其他插件会被安装到wsl内.且wsl和windows共享环境变量,
可以在wsl中直接调用exe程序(需要带上.exe后缀)更多操作请查看&lt;a href="https://docs.microsoft.com/en-us/windows/wsl/interop">官方文档&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></content><category scheme="https://xs-cw.github.io/categories/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/" term="软件使用" label="软件使用"/><category scheme="https://xs-cw.github.io/categories/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/" term="开发环境" label="开发环境"/><category scheme="https://xs-cw.github.io/tags/wsl/" term="wsl" label="wsl"/><category scheme="https://xs-cw.github.io/tags/vscode/" term="vscode" label="vscode"/><category scheme="https://xs-cw.github.io/tags/lxrunoffline/" term="LxRunOffline" label="LxRunOffline"/></entry><entry><title type="text">Leetcode986</title><link rel="alternate" type="text/html" href="https://xs-cw.github.io/posts/leetcode986/"/><id>https://xs-cw.github.io/posts/leetcode986/</id><updated>2021-02-08T09:21:31+00:00</updated><published>2020-03-08T14:45:17+08:00</published><author><name>saltfish</name><uri>https://www.saltfish.fun/</uri><email>s4ltfish@gmail.com</email></author><rights>转载标明出处</rights><summary type="html">986. 区间列表的交集 给定两个由一些闭区间组成的列表，每个区间列表都是成对不相交的，并且已……</summary><content type="html">&lt;h2 id="986-区间列表的交集">986. 区间列表的交集&lt;/h2>
&lt;p>给定两个由一些闭区间组成的列表，每个区间列表都是成对不相交的，并且已经排序。&lt;/p>
&lt;p>返回这两个区间列表的交集。&lt;/p>
&lt;p>（形式上，闭区间 [a, b]（其中 a &amp;lt;= b）表示实数 x 的集合，而 a &amp;lt;= x &amp;lt;= b。两个闭区间的交集是一组实数，要么为空集，要么为闭区间。例如，[1, 3] 和 [2, 4] 的交集为 [2, 3]。）&lt;/p>
&lt;p>&lt;strong>示例：&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://xs-cw.github.io/img/interval1.png" alt="img">&lt;/p>
&lt;blockquote>
&lt;p>输入：A = [[0,2],[5,10],[13,23],[24,25]], B = [[1,5],[8,12],[15,24],[25,26]]
输出：[[1,2],[5,5],[8,10],[15,23],[24,24],[25,25]]
注意：输入和所需的输出都是区间对象组成的列表，而不是数组或列表。&lt;/p>
&lt;/blockquote>
&lt;p>提示：&lt;/p>
&lt;ol>
&lt;li>&lt;code>0 &amp;lt;= A.length &amp;lt; 1000 &lt;/code>&lt;/li>
&lt;li>&lt;code>0 &amp;lt;= B.length &amp;lt; 1000&lt;/code>&lt;/li>
&lt;li>&lt;code>0 &amp;lt;= A[i].start, A[i].end, B[i].start, B[i].end &amp;lt; 10^9&lt;/code>&lt;/li>
&lt;/ol>
&lt;h2 id="思路">思路&lt;/h2>
&lt;p>遍历A,先判断两个区间是否有交集,如果有,则交集取&lt;code>max(A[i][0],B[j][0])&lt;/code>,&lt;code>min(A[i][1],B[j][1])&lt;/code>&lt;/p>
&lt;h2 id="代码">代码&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="nf">intervalIntersection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">A&lt;/span> &lt;span class="p">[][]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">B&lt;/span> &lt;span class="p">[][]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">[][]&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">res&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">([][]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">A&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="nx">ii&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">ii&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="nx">ii&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">ii&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">&amp;gt;&lt;/span> &lt;span class="nx">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">ii&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">continue&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">ii&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nx">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">continue&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">r&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="nx">B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">ii&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">r&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">ii&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">r&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="nx">B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">ii&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">r&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">r&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">ii&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">res&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">res&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="https://xs-cw.github.io/categories/leetcode/" term="leetcode" label="leetcode"/><category scheme="https://xs-cw.github.io/tags/leetcode/" term="leetcode" label="leetcode"/></entry><entry><title type="text">Leetcode88</title><link rel="alternate" type="text/html" href="https://xs-cw.github.io/posts/leetcode88/"/><id>https://xs-cw.github.io/posts/leetcode88/</id><updated>2021-02-08T09:21:31+00:00</updated><published>2020-03-07T21:30:36+08:00</published><author><name>saltfish</name><uri>https://www.saltfish.fun/</uri><email>s4ltfish@gmail.com</email></author><rights>转载标明出处</rights><summary type="html">88. 合并两个有序数组 给你两个有序整数数组 nums1 和 nums2，请你将 nums2 合并到 nums1 中，使 num1 成为一……</summary><content type="html">&lt;h2 id="88-合并两个有序数组">88. 合并两个有序数组&lt;/h2>
&lt;p>给你两个有序整数数组 &lt;code>nums1&lt;/code> 和 &lt;code>nums2&lt;/code>，请你将 &lt;code>nums2&lt;/code> 合并到 &lt;code>nums1&lt;/code> 中，使 &lt;code>num1&lt;/code> 成为一个有序数组。&lt;/p>
&lt;h3 id="说明">说明:&lt;/h3>
&lt;ul>
&lt;li>初始化 &lt;code>nums1&lt;/code> 和 &lt;code>nums2&lt;/code> 的元素数量分别为 m 和 n 。&lt;/li>
&lt;li>你可以假设 &lt;code>nums1&lt;/code> 有足够的空间（空间大小大于或等于 m + n）来保存 &lt;code>nums2&lt;/code> 中的元素。&lt;/li>
&lt;/ul>
&lt;h2 id="示例">示例:&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="nx">输入&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="nx">nums1&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nx">m&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">3&lt;/span>
&lt;span class="nx">nums2&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nx">n&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">3&lt;/span>
&lt;span class="nx">输出&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="思路">思路&lt;/h2>
&lt;p>从&lt;code>nums1&lt;/code>的最后一个位置(&lt;code>i=len(nums1)-1&lt;/code>)开始依次填入两个数组中最大的;&lt;/p>
&lt;p>因为两个数组都是有序的,所以只需要从最后的位置比较即可;&lt;/p>
&lt;p>&lt;code>nums1&lt;/code>与&lt;code>nums2&lt;/code>比较下标为&lt;code>m-1&lt;/code>和&lt;code>n-1&lt;/code>,将两者中较大的移到&lt;code>nums1&lt;/code>的尾部;&lt;/p>
&lt;p>将取出数字的数组下标(m或者n)和&lt;code>i&lt;/code>都往前移动一步,直到&lt;code>nums2&lt;/code>取完.&lt;/p>
&lt;p>若&lt;code>nums1&lt;/code>的m&amp;lt;0,则只需要将&lt;code>nums2&lt;/code>的剩余数字依次填充到&lt;code>i&lt;/code>下标即可&lt;/p>
&lt;h2 id="代码">代码&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="nf">merge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">nums1&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">m&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">nums2&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">n&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">m&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nb">copy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">nums1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">nums2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">m&lt;/span>&lt;span class="o">--&lt;/span>
&lt;span class="nx">n&lt;/span>&lt;span class="o">--&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">nums1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">n&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">--&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">m&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nx">nums1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="nx">nums2&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">nums1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">nums2&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">n&lt;/span>&lt;span class="o">--&lt;/span>
&lt;span class="k">continue&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">nums1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">&amp;gt;&lt;/span> &lt;span class="nx">nums2&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">nums1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nx">nums1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">nums1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nx">nums2&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">m&lt;/span>&lt;span class="o">--&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="https://xs-cw.github.io/categories/leetcode/" term="leetcode" label="leetcode"/><category scheme="https://xs-cw.github.io/tags/leetcode/" term="leetcode" label="leetcode"/></entry><entry><title type="text">Docker-Compose安装出错</title><link rel="alternate" type="text/html" href="https://xs-cw.github.io/posts/docker-compose-error/"/><id>https://xs-cw.github.io/posts/docker-compose-error/</id><updated>2021-02-08T09:21:31+00:00</updated><published>2020-03-04T21:05:39+08:00</published><author><name>saltfish</name><uri>https://www.saltfish.fun/</uri><email>s4ltfish@gmail.com</email></author><rights>转载标明出处</rights><summary type="html">1、安装docker-compose 首先检查Linux有没有安装Python-pip……</summary><content type="html">&lt;p>&lt;strong>1、安装docker-compose&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>首先检查Linux有没有安装Python-pip包，直接执行 &lt;code>yum install python-pip&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>没有python-pip包就执行命令 &lt;code>yum -y install epel-release&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>执行成功之后，再次执行&lt;code>yum install python-pip&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>对安装好的pip进行升级 &lt;code>pip install --upgrade pip&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>安装好pip之后，就可以安装Docker-Compose了.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在linunx终端执行：&lt;code>pip install docker-compose&lt;/code>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>执行完之后，输入&lt;code>docker-compse -version&lt;/code>，报如下错误&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">Traceback &lt;span class="o">(&lt;/span>most recent call last&lt;span class="o">)&lt;/span>:
File &lt;span class="s2">&amp;#34;/usr/bin/docker-compose&amp;#34;&lt;/span>, line 7, in &amp;lt;module&amp;gt;
from compose.cli.main import main
File &lt;span class="s2">&amp;#34;/usr/lib/python2.7/site-packages/compose/cli/main.py&amp;#34;&lt;/span>, line 17, in &amp;lt;module&amp;gt;
import docker
File &lt;span class="s2">&amp;#34;/usr/lib/python2.7/site-packages/docker/__init__.py&amp;#34;&lt;/span>, line 2, in &amp;lt;module&amp;gt;
from .api import APIClient
File &lt;span class="s2">&amp;#34;/usr/lib/python2.7/site-packages/docker/api/__init__.py&amp;#34;&lt;/span>, line 2, in &amp;lt;module&amp;gt;
from .Client import APIClient
...
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>2、解决方法：&lt;/strong>&lt;/p>
&lt;p>卸载已经安装的Python的urllib3包&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">pip uninstall urllib3
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后就能够成功安装python-urllib3软件包&lt;/p>
&lt;p>&lt;strong>3、运行certbot命令提示urllib3版本低&lt;/strong>&lt;/p>
&lt;p>如果你成功安装了python-urllib3软件包，在运行certbot命令时提示urllib3版本太低，可以使用pip命令升级urllib3包：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">pip install --upgrade urllib3
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>执行成功之后：&lt;code>docker-compose --version&lt;/code> 查看版本信息.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash"> &lt;span class="nv">$docker&lt;/span>-compose -version
docker-compose version 1.8.1, build 878cff1
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>本文来自&lt;a href="https://www.cnblogs.com">博客园&lt;/a>&lt;/p>
&lt;p>感谢作者&lt;a href="https://home.cnblogs.com/u/richiewlq/">Richie`&lt;/a>&lt;/p>
&lt;p>查看原文&lt;a href="https://www.cnblogs.com/richiewlq/p/9203504.html">CentOS7下安装Docker-Compose No module named 'requests.packages.urllib3'&lt;/a>&lt;/p></content><category scheme="https://xs-cw.github.io/categories/%E8%BD%AF%E4%BB%B6%E4%BD%BF%E7%94%A8/" term="软件使用" label="软件使用"/><category scheme="https://xs-cw.github.io/categories/docker/" term="docker" label="docker"/><category scheme="https://xs-cw.github.io/tags/docker-compose/" term="docker-compose" label="docker-compose"/></entry><entry><title type="text">系统安装找到启动路径</title><link rel="alternate" type="text/html" href="https://xs-cw.github.io/posts/system-find-boot/"/><id>https://xs-cw.github.io/posts/system-find-boot/</id><updated>2021-02-08T09:21:31+00:00</updated><published>2020-03-04T21:05:39+08:00</published><author><name>saltfish</name><uri>https://www.saltfish.fun/</uri><email>s4ltfish@gmail.com</email></author><rights>转载标明出处</rights><summary type="html">windows 系统安装启动盘启动时找不到启动路径 找BOOTMGR文件在那个盘符find /bootmgr 这样会在……</summary><content type="html">&lt;p>windows 系统安装启动盘启动时找不到启动路径&lt;/p>
&lt;ol>
&lt;li>找BOOTMGR文件在那个盘符&lt;code>find /bootmgr&lt;/code>&lt;/li>
&lt;li>这样会在所有的磁盘根目录寻找文件，找到文件后接着进入该盘符 &lt;code>root (hd0,0)&lt;/code>&lt;/li>
&lt;li>然后转交引导权&lt;code>chainloader /bootmgr&lt;/code>
再执行&lt;code>boot&lt;/code>
启动
这样就OK了~！&lt;/li>
&lt;/ol></content><category scheme="https://xs-cw.github.io/categories/%E7%B3%BB%E7%BB%9F/" term="系统" label="系统"/><category scheme="https://xs-cw.github.io/categories/%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/" term="系统安装" label="系统安装"/><category scheme="https://xs-cw.github.io/tags/%E7%B3%BB%E7%BB%9F/" term="系统" label="系统"/></entry><entry><title type="text">Go项目标准结构</title><link rel="alternate" type="text/html" href="https://xs-cw.github.io/posts/go-project-layout/"/><id>https://xs-cw.github.io/posts/go-project-layout/</id><updated>2021-02-08T09:21:31+00:00</updated><published>2020-03-02T14:28:16+08:00</published><author><name>saltfish</name><uri>https://www.saltfish.fun/</uri><email>s4ltfish@gmail.com</email></author><rights>转载标明出处</rights><summary type="html">[`project-layout`](https://github.com/golang-standards/project-layout)项目总结了Go 项目的布局,这是Go应用程序项目的基本布局, 并不是Go核心开发团队定义的官方标准， 但是，这是Go生态系统中的一种常见的项目布局模式。</summary><content type="html">&lt;h2 id="go目录">Go目录&lt;/h2>
&lt;h3 id="cmd">&lt;code>/cmd&lt;/code>&lt;/h3>
&lt;p>该目录用于存放 Go 项目的入口，即 main.go。一般来说，我们应该在 &lt;code>cmd&lt;/code>目录下创建子目录，子目录名称代表可执行程序的名称（例如&lt;code>/cmd/myapp&lt;/code>）。上面列出的优秀开源项目基本上遵循了这一规则。
一般来说，该目录中的代码应该尽可能少。如果认为该代码可以导入并在其他项目中使用，那么它应该位于&lt;code>/pkg&lt;/code>目录中。如果该代码不可重用，或者不希望其他人重用它，则将该代码放在&lt;code>/internal&lt;/code>目录中。&lt;/p>
&lt;h3 id="internal">&lt;code>/internal&lt;/code>&lt;/h3>
&lt;p>这是 Go 包的一个特性，放在该包中的代码，表明只希望项目内部使用，是项目或库私有的，其他项目或库不能使用。请注意，不限于顶层internal目录，internal在项目树的任何级别上都可以有多个目录。
可以选择向内部包中添加一些额外的结构，以分隔共享和非共享内部代码。它不是必需的（尤其是对于较小的项目），但是最好有视觉提示来显示包的用途。实际应用程序代码可以进入&lt;code>/internal/app&lt;/code>目录（例如&lt;code>/internal/app/myapp&lt;/code>），而这些应用程序共享的代码可以进入&lt;code>/internal/pkg&lt;/code>目录（例如&lt;code>/internal/pkg/myprivlib&lt;/code>）。&lt;/p>
&lt;h3 id="pkg">&lt;code>/pkg&lt;/code>&lt;/h3>
&lt;p>该包可以和 &lt;code>internal&lt;/code>对应，是公开的。一般来说，放在该包的代码应该和具体业务无关，方便本项目和其他项目重用。当你决定将代码放入该包时，你应该对其负责，因为别人很可能使用它。
如果应用程序项目很小，并且嵌套的额外层次不会增加太多价值（除非您真的想要，请不要使用它。当它变得足够大并且您的根目录变得非常复杂时（特别是如果您有很多非Go应用程序组件），请考虑一下。&lt;/p>
&lt;h3 id="vendor">&lt;code>/vendor&lt;/code>&lt;/h3>
&lt;p>应用程序依存关系，&lt;code>GO1.13+&lt;/code>启用go module来代替，并不需要vendor目录了。&lt;/p>
&lt;h2 id="server-application目录">server application目录&lt;/h2>
&lt;h3 id="api">&lt;code>/api&lt;/code>&lt;/h3>
&lt;p>该目录用来存放 OpenAPI/Swagger 规则说明, JSON 格式定义, 协议定义文件等。也有可能用来存放具体的对外公开 API.&lt;/p>
&lt;h2 id="web-application-目录">web application 目录&lt;/h2>
&lt;h3 id="web">&lt;code>/web&lt;/code>&lt;/h3>
&lt;p>Web应用程序特定的组件：静态Web资产，服务器端模板和SPA。&lt;/p>
&lt;h2 id="common-application目录">common application目录&lt;/h2>
&lt;h3 id="configs">&lt;code>/configs&lt;/code>&lt;/h3>
&lt;p>配置文件模板或默认配置。&lt;/p>
&lt;h3 id="init">&lt;code>/init&lt;/code>&lt;/h3>
&lt;p>存放随着系统自动启动脚本，如：systemd, upstart, sysv；或者通过 supervisor 进行进程管理的脚本。&lt;/p>
&lt;h3 id="scripts">&lt;code>/scripts&lt;/code>&lt;/h3>
&lt;p>存放 build、install、analysis 等操作脚本。这些脚本使得项目根目录的 Makefile 很简洁。&lt;/p>
&lt;h3 id="build">&lt;code>/build&lt;/code>&lt;/h3>
&lt;p>该目录用于存放打包和持续集成相关脚本。将云（AMI），容器（Docker），操作系统（deb，rpm，pkg）软件包配置和脚本放在/build/package目录中。
将CI（travis，circle，drone）配置和脚本放在/build/ci目录中。请注意，某些配置项工具（例如Travis CI）对于其配置文件的位置非常挑剔。尝试将配置文件放在&lt;code>/build/ci&lt;/code>目录中，将它们链接到CI工具期望它们的位置（如果可能）。&lt;/p>
&lt;h3 id="deployments">&lt;code>/deployments&lt;/code>&lt;/h3>
&lt;p>IaaS，PaaS，系统和容器编排部署配置和模板（docker-compose，kubernetes / helm，mesos，terraform，bosh）。&lt;/p>
&lt;h3 id="test">&lt;code>/test&lt;/code>&lt;/h3>
&lt;p>一般用来存放除单元测试、基准测试之外的测试，比如集成测试、测试数据等。&lt;/p>
&lt;h2 id="其他目录">其他目录&lt;/h2>
&lt;h3 id="docs">&lt;code>/docs&lt;/code>&lt;/h3>
&lt;p>设计和用户文档（除了godoc生成的文档之外）。&lt;/p>
&lt;h3 id="tools">&lt;code>/tools&lt;/code>&lt;/h3>
&lt;p>存放项目的支持工具。请注意，这些工具可以从&lt;code>/pkg&lt;/code>和&lt;code>/internal&lt;/code>目录导入代码。&lt;/p>
&lt;h3 id="examples">&lt;code>/examples&lt;/code>&lt;/h3>
&lt;p>应用程序或公共库的示例。&lt;/p>
&lt;h3 id="third_party">&lt;code>/third_party&lt;/code>&lt;/h3>
&lt;p>外部帮助程序工具，分叉的代码和其他第三方工具（例如Swagger UI）。&lt;/p>
&lt;h3 id="githooks">&lt;code>/githooks&lt;/code>&lt;/h3>
&lt;p>githooks&lt;/p>
&lt;h3 id="assets">&lt;code>/assets&lt;/code>&lt;/h3>
&lt;p>与资源库一起使用的其他资产（图像，徽标等）。&lt;/p>
&lt;h3 id="website">&lt;code>/website&lt;/code>&lt;/h3>
&lt;p>如果不使用Github页面，则在这里放置项目的网站数据。&lt;/p>
&lt;h2 id="不应该拥有的目录">不应该拥有的目录&lt;/h2>
&lt;h3 id="src">&lt;code>/src&lt;/code>&lt;/h3>
&lt;p>有些Go项目确实有一个&lt;code>src&lt;/code>文件夹，但通常是Java开发人员通用模式。如果可以，请尝试不要采用此Java模式。你真的不希望您的Go代码或Go项目看起来像Java😀&lt;/p>
&lt;p>不要混淆了项目的&lt;code>/src&lt;/code>和go语言的&lt;code>GOPATH&lt;/code>，如果你的项目里有&lt;code>/src&lt;/code>,那么你的项目路径可能就是&lt;code>/some/path/to/workspace/src/your_project/src/your_code.go&lt;/code>。go 1.11之后可以将项目放在&lt;code>GOPATH&lt;/code>之外的地方，但最好还是不要在项目里使用&lt;code>/src&lt;/code>目录&lt;/p></content><category scheme="https://xs-cw.github.io/categories/go%E8%AF%AD%E8%A8%80/" term="go语言" label="go语言"/><category scheme="https://xs-cw.github.io/tags/go%E8%AF%AD%E8%A8%80/" term="go语言" label="go语言"/><category scheme="https://xs-cw.github.io/tags/go/" term="go" label="go"/><category scheme="https://xs-cw.github.io/tags/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84/" term="项目结构" label="项目结构"/></entry></feed>